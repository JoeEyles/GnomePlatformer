<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>gnome_idle_right</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//grav = 0.2;
//velocity_x = 0;
//velocity_y = 0;
jumpspeed = 12*350*5;
jump_max_speed = 20
movespeed = 10;//14*10;
phy_fixed_rotation=true;  
//currentSprite = gnome_walk_right;
//image_speed = 0;
originalImageScale = image_xscale;

isJumping = false;
isBig = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_right = keyboard_check(ord("D")) || keyboard_check(vk_right);
key_left = keyboard_check(ord("A")) || keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);

var gp_num = gamepad_get_device_count();
var gamepadTol = 0.5;
for (var i = 0; i &lt; gp_num; i++;)
{
    if(gamepad_is_connected(i))
    {
        key_right = key_right || gamepad_button_check(i, gp_padr); 
        key_left = key_left || gamepad_button_check(i, gp_padl);
        key_jump = key_jump || gamepad_button_check_pressed(i, gp_face1);
        if(gamepad_axis_value(i, gp_axislh) &gt; gamepadTol) //TODO: use the actual value to control speed?
        {
            key_right = 1;
        }
        if(gamepad_axis_value(i, gp_axislh) &lt; -gamepadTol) //TODO: use the actual value to control speed?
        {
            key_left = 1;
        }
    }
}


move = key_right - key_left;
velocity_x = move * movespeed;

//show_debug_message("speed = " + string(phy_speed_x) + ", " + string(phy_speed_y));
//if(place_meeting(x,y, GroundTile_obj)) 
//{
//    show_debug_message("place meeting " + string(random(100)));
    //show_debug_message(" phy_speed_y = " + string(phy_speed_y));
//}
//else
//{
 //   show_debug_message("not meeting");
//}


/*
if (place_meeting(x,y, GroundTile_obj) &amp;&amp; key_jump)// &amp;&amp; phy_speed_y &lt;= 0)
{  
    physics_apply_local_impulse(0,0,0, key_jump * -jumpspeed*5);
    //phy_speed_y -= 20;
    repeat(60)
    {
        var xx = x + random(sprite_width);//+ sprite_width/2.0
        var yy = y + sprite_height;
        part_particles_create(global.P_System, xx, yy, global.Particle1, 1);
    }
}
*/




if(isJumping == false) 
{    
    if(abs(velocity_x) &gt; 0.05)
    {
        if(place_meeting(x+1,y, Acorn_obj) || place_meeting(x-1,y, Acorn_obj))
        {
            sprite_index = gnome_push_right;
        }
        else 
        {
            sprite_index = gnome_walk_right;
        }
    }
    else 
    {
        sprite_index = gnome_idle_right;
    }
}
else if(isJumping) 
{
    sprite_index = gnome_jump_right;
}
else 
{
    sprite_index = gnome_idle_right;
}


if(velocity_x &lt; -0.05)
{
    image_xscale = -originalImageScale;
}
else if(velocity_x &gt; 0.05)
{
    image_xscale = originalImageScale;
}
lastVelocityDirectiion = sign(velocity_x);




physics_apply_local_impulse(0,0,velocity_x*100, 0);
if(phy_speed_x &gt; movespeed)
{
    phy_speed_x = movespeed;
}
if(phy_speed_y &gt; jump_max_speed)
{
    phy_speed_y = jump_max_speed;
}
if(phy_speed_x &lt; -movespeed)
{
    phy_speed_x = -movespeed;
}
if(phy_speed_y &lt; -jump_max_speed)
{
    phy_speed_y = -jump_max_speed;
}
/*
var dist = sqrt(sqr(phy_speed_x) + sqr(phy_speed_y));
if(dist &gt; movespeed)
{
    phy_speed_x = phy_speed_x*movespeed/dist;
    phy_speed_y = phy_speed_y*movespeed/dist;
}
*/
/*
var count = 0;
if(place_meeting(x + velocity_x,y, all))
{
    while(place_meeting(phy_position_x + sign(velocity_x),y, all) == false) 
    {
        count ++;
        if(count &gt; 1000)
            break;
        phy_position_x += sign(velocity_x);
    }
    phy_position_x += sign(velocity_x);
}
else
{
*/
        //phy_position_x += velocity_x;//TODO: dt?
        //phy_speed_x = velocity_x;
//phy_speed_x = velocity_x;
//}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Acorn_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//need this as gamemaker deletes events with no actions
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="PhysicsTest_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//temp
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Mushroom_obj">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>JumpCollision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>Mushroom_obj</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (place_meeting(x,y+1, Mushroom_obj) &amp;&amp; isBig == false)
{
    image_xscale = image_xscale*2;
    image_yscale = image_yscale*2;
    isBig = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="GroundTile_obj">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>JumpCollision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>GroundTile_obj</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.200000002980232</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>304,64</point>
    <point>368,64</point>
    <point>608,752</point>
    <point>528,1008</point>
    <point>160,1008</point>
    <point>64,736</point>
  </PhysicsShapePoints>
</object>
